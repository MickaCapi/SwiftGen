// Generated using SwiftGen, by O.Halligon â€” https://github.com/AliSoftware/SwiftGen

{% if structuredStrings %}
import Foundation

// swiftlint:disable file_length
// swiftlint:disable line_length

// swiftlint:disable type_body_length
// swiftlint:disable nesting

enum {{enumName}} {
{% define enumBlock strings tb %}
{{args.tb}}  {% for string in args.strings.strings %}
{{args.tb}}  /// {{string.translation}}
{{args.tb}}  case {{string.keytail|swiftIdentifier|titlecase|snakeToCamelCase|escapeReservedKeywords}}{% if string.params %}({{string.params.types|join}}){% endif %}
{{args.tb}}  {% endfor %}
{{args.tb}}  {% if args.strings.subenums %}
{{args.tb}}  {% for subenum in args.strings.subenums %}

{{args.tb}}  case {{subenum.name|swiftIdentifier|titlecase|snakeToCamelCase|escapeReservedKeywords}}({{subenum.name|swiftIdentifier|titlecase|snakeToCamelCase}}{{enumName}})
{{args.tb}}  enum {{subenum.name|swiftIdentifier|titlecase|snakeToCamelCase}}{{enumName}} {
{{args.tb}}    {% set tb %}{{args.tb}}  {% endset %}
{{args.tb}}    {% call enumBlock subenum tb %}
{{args.tb}}  }
{{args.tb}}  {% endfor %}
{{args.tb}}  {% endif %}
{% enddefine %}
  {% call enumBlock structuredStrings tb %}
}

extension {{enumName}}: CustomStringConvertible {
{% define extensionBlock strings tb keySuffix %}
{{args.tb}}  {% for string in args.strings.strings %}
{{args.tb}}  {% if string.params %}
{{args.tb}}  case .{{string.keytail|swiftIdentifier|titlecase|snakeToCamelCase|escapeReservedKeywords}}({{string.params.declarations|join}}):
{{args.tb}}    return {{enumName}}.tr("{{string.key}}", {{string.params.names|join}})
{{args.tb}}  {% else %}
{{args.tb}}  case .{{string.keytail|swiftIdentifier|titlecase|snakeToCamelCase|escapeReservedKeywords}}:
{{args.tb}}    return {{enumName}}.tr("{{string.key}}")
{{args.tb}}  {% endif %}
{{args.tb}}  {% endfor %}
{{args.tb}}  {% if args.strings.subenums %}
{{args.tb}}  {% for subenum in args.strings.subenums %}
{{args.tb}}  {% set subkey %}levelSub{{keySuffix}}Key{{subenum.name|swiftIdentifier|titlecase|snakeToCamelCase|escapeReservedKeywords}}{% endset %}
{{args.tb}}  case .{{subenum.name|swiftIdentifier|titlecase|snakeToCamelCase|escapeReservedKeywords}}(let {{subkey}}):

{{args.tb}}    switch {{subkey}} {
{{args.tb}}    {% set tb %}{{args.tb}}    {% endset %}
{{args.tb}}    {% set keySuffix %}{{keySuffix}}Sub{% endset %}
{{args.tb}}    {% call extensionBlock subenum tb keySuffix %}
{{args.tb}}    }
{{args.tb}}  {% endfor %}
{{args.tb}}  {% endif %}
{% enddefine %}
  var description: String { return self.string }

  var string: String {
    switch self {
      {% set tb %}    {% endset %}
      {% call extensionBlock structuredStrings tb keySuffix %}
    }
  }

  private static func tr(key: String, _ args: CVarArgType...) -> String {
    let format = NSLocalizedString(key, comment: "")
    return String(format: format, locale: NSLocale.currentLocale(), arguments: args)
  }
}

// swiftlint:enable type_body_length
// swiftlint:enable nesting

func tr(key: {{enumName}}) -> String {
  return key.string
}
{% else %}
// No string found
{% endif %}
